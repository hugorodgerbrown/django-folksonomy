# Generated by Django 4.2.8 on 2023-12-23 17:49

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The tag value itself.", max_length=150, unique=True
                    ),
                ),
                (
                    "excerpt",
                    models.TextField(
                        blank=True, help_text="A short description of the tag."
                    ),
                ),
                (
                    "approval_state",
                    models.CharField(
                        choices=[
                            ("PROPOSED", "Proposed"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PROPOSED",
                        help_text="Whether this has been accepted as a valid tag.",
                        max_length=150,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this tag was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this tag was last updated (at database level).",
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, help_text="When this tag was accepted.", null=True
                    ),
                ),
                (
                    "rejected_at",
                    models.DateTimeField(
                        blank=True, help_text="When this tag was rejected.", null=True
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SkillCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this category was created.",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "tag categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserSkill",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "skill_level",
                    models.PositiveSmallIntegerField(
                        default=1, help_text="The level of skill that the user has."
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this user skill was created."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this user skill was last updated.",
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        help_text="The skill that the user has.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_skills",
                        to="demo.skill",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who has this skill.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_skills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="skill",
            name="categories",
            field=models.ManyToManyField(
                blank=True,
                help_text="Skill classification categoreis - used for filtering etc.",
                related_name="category_skills",
                to="demo.skillcategory",
            ),
        ),
        migrations.AddField(
            model_name="skill",
            name="is_alias_for",
            field=models.ForeignKey(
                blank=True,
                help_text="A parent tag for which this acts as an alias.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="demo.skill",
                verbose_name="is an alias for",
            ),
        ),
        migrations.AddField(
            model_name="skill",
            name="users",
            field=models.ManyToManyField(
                blank=True,
                help_text="Users who have this skill.",
                related_name="skills",
                through="demo.UserSkill",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
