# Generated by Django 4.2.8 on 2023-12-23 12:34

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TagCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this category was created.",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "tag categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The tag value itself.",
                        max_length=150,
                        unique=True,
                        verbose_name="Tag name",
                    ),
                ),
                (
                    "excerpt",
                    models.TextField(
                        blank=True, help_text="A short description of the tag."
                    ),
                ),
                (
                    "tag_state",
                    models.CharField(
                        choices=[
                            ("PROPOSED", "Proposed"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PROPOSED",
                        help_text="The state of this tag.",
                        max_length=150,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this tag was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this tag was last updated (at database level).",
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, help_text="When this tag was accepted.", null=True
                    ),
                ),
                (
                    "rejected_at",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        help_text="When this tag was rejected.",
                        null=True,
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Tag classification categoreis - used for filtering etc.",
                        related_name="tags",
                        to="folksonomy.tagcategory",
                    ),
                ),
                (
                    "parent_tag",
                    models.ForeignKey(
                        blank=True,
                        help_text="A parent tag for which this acts as a synonym.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="folksonomy.tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "tag",
                "verbose_name_plural": "tags",
                "ordering": ["name"],
            },
        ),
    ]
